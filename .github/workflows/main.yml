name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  frontend-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [22]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install Frontend Dependencies
        working-directory: ./app/frontend
        run: npm ci

      - name: Build Frontend
        working-directory: ./app/frontend
        run: npm run build --if-present

      - name: Run Frontend Tests
        working-directory: ./app/frontend
        run: npm run test

  backend-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [22]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install Backend Dependencies
        working-directory: ./app/backend
        run: npm ci

      - name: Build Backend
        working-directory: ./app/backend
        run: npm run build --if-present

      - name: Run Backend Tests
        working-directory: ./app/backend
        run: npm run test

  docker-build:
    runs-on: ubuntu-latest
    needs: [frontend-build, backend-build]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Login to GitHub Packages
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.G_TOKEN }}

      - name: Build and Push Frontend Image
        uses: docker/build-push-action@v2
        with:
          context: ./frontend
          tags: |
            fendimohamed/frontend-chat-app:${{ github.sha }} 
            ghcr.io/fendimohamed/frontend-chat-app:${{ github.sha }}
          push: ${{ github.ref == 'refs/heads/main' }}

      - name: Build and Push Backend Image
        uses: docker/build-push-action@v2
        with:
          context: ./backend
          tags: |
            fendi/backend-chat-app:${{ github.sha }}
            ghcr.io/fendi/backend-chat-app:${{ github.sha }}
          push: ${{ github.ref == 'refs/heads/main' }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
        
update-manifest-stage:

runs-on: ubuntu-latest

needs: ['build-and-push-docker-image']

steps:

- uses: actions/checkout@v3

with:
repository: FendiMohamed/Scalable-Real-Time-Chat-App
ref: 'main'
token: ${{ secrets.G_TOKEN }}

- name: setup git config

run: /

git config --global user.email "m.fendi@esi-sba.dz"

git config --global user.name "FendiMohamed"

echo ${{ github.sha }}

sed -i "s#${{github.actor }}.*#${{github.actor }}/Scalable-Real-Time-Chat-App:${{github.sha}}#g" deployment.yaml

git add -A

git commit -am "Update image for ${{ github.sha }}"

- run: echo ${{ github }}

- run: git push origin main
