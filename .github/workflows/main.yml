name: CI Pipeline

on:
  push:
    branches:
      - main
    paths:
      - 'app/chat-frontend/**'
      - 'app/chat-backend/**'
  pull_request:
    branches:
      - main
    paths:
      - 'app/chat-frontend/**'
      - 'app/chat-backend/**'

jobs:
  frontend-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [22]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: List Files in Frontend Directory
        run: ls -la ./app/chat-frontend

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: app/chat-frontend

      - name: Install Frontend Dependencies
        working-directory: ./app/chat-frontend
        run: npm ci
      # - name: Prisma Generate (Frontend)
      #   working-directory: ./app/chat-frontend
      #   run: npx prisma generate

      # - name: Build Frontend
      #   working-directory: ./app/chat-frontend
      #   run: npm run build --if-present


  backend-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [22]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: List Files in Backend Directory
        run: ls -la ./app/chat-backend

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: app/chat-backend

      - name: Install Backend Dependencies
        working-directory: ./app/chat-backend
        run: npm ci

      # - name: Build Backend
      #   working-directory: ./app/chat-backend
      #   run: npm run build --if-present

  docker-build:
    runs-on: ubuntu-latest
    needs: [frontend-build, backend-build]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Frontend Image
        uses: docker/build-push-action@v2
        with:
          context: ./app/chat-frontend
          tags: |
            fendimohamed/frontend-chat-app:${{ github.sha }} 
          push: ${{ github.ref == 'refs/heads/main' }}

      - name: Build and Push Backend Image
        uses: docker/build-push-action@v2
        with:
          context: ./app/chat-backend
          tags: |
            fendimohamed/backend-chat-app:${{ github.sha }}
          push: ${{ github.ref == 'refs/heads/main' }}

  update-deployment:
    runs-on: ubuntu-latest
    needs: [docker-build]
    steps:
      - name: Checkout Infra Repo
        uses: actions/checkout@v3
        with:
          repository: FendiMohamed/Scalable-Real-Time-Chat-App
          ref: 'main'
          token: ${{ secrets.G_TOKEN }}

      - name: Set up Git Config
        run: |
          git config --global user.email "m.fendi@esi-sba.dz"
          git config --global user.name "FendiMohamed"

      - name: Update Frontend Deployment File
        run: |
          sed -i "s#fendimohamed/frontend-chat-app:.*#fendimohamed/backend-chat-app:${{ github.sha }}#g" kubernetes/frontend/frontend-deploy.yaml
          git add kubernetes/frontend/frontend-deploy.yaml
          git commit -m "Update frontend image to ${{ github.sha }}"


      - name: Update Backend Deployment File
        run: |
          sed -i "s#fendimohamed/backend-chat-app:.*#fendimohamed/backend-chat-app:${{ github.sha }}#g" kubernetes/backend/backend-deploy.yaml
          git add kubernetes/backend/backend-deploy.yaml
          git commit -m "Update backend image to ${{ github.sha }}"

      - name: Push Changes
        run: git push origin main
